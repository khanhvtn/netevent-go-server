#Model
type PageInfo {
	totalPage: Int!
	currentPage: Int!
}

type User {
	id: ID!
	email: String!
	password: String!
	roles: [String!]!
	isActivated: Boolean!
	createdAt: Time!
	updatedAt: Time!
}

type UserResponse {
	pageInfo: PageInfo!
	users: [User!]!
}

type Event {
	id:                    ID! 
	createdAt:             Time!         
	updatedAt:             Time!        
	tags:                  [String!]!          
	isApproved:            Boolean!             
	reviewer:              User              
	isFinished:            Boolean!            
	tasks:                 [Task!]!           
	facilityHistories:     [FacilityHistory!]!  
	name:                  String!             
	language:              String!        
	eventType:             EventType!        
	mode:                  String!           
	location:              String!            
	accommodation:         String!           
	registrationCloseDate: Time!         
	startDate:             Time!        
	endDate:               Time!        
	maxParticipants:       Int!                
	description:           String!            
	owner:                 User             
	budget:                Float!           
	image:                 String!           
	isDeleted:             Boolean!
	customizeFields:	   [CustomizeField]
}

type EventResponse {
	pageInfo: PageInfo!
	events: [Event!]!
}

type CustomizeField {
	name: String!
	type: String!
	value: [String!]!
	required: Boolean!
}


type EventType  {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	name: String!
	isDeleted: Boolean!
}
type EventTypeResponse {
	pageInfo: PageInfo!
	eventTypes: [EventType!]!
}


type Facility  {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	status: Boolean!
	name: String!
	code: String!
	type: String!
	isDeleted: Boolean!
}

type FacilityResponse {
	pageInfo: PageInfo!
	facilities: [Facility!]!
}

type FacilityHistory  {
	id: ID!
	createdAt: Time!         
	updatedAt: Time! 
	facility: Facility!
	borrowDate: Time!
	returnDate: Time!
	event: Event!
}

type Participant  {
	id: ID!
	createdAt: Time!         
	updatedAt: Time! 
	isValid: Boolean!
	isAttended: Boolean!
	event: Event!
	email: String!
	name: String!
	academic: String!
	school: String!
	major: String!
	phone: String!
	dob: Time!
	expectedGraduateDate: Time!
}

type Task  {
	id: ID!
	createdAt: Time!
	updatedAt: Time!
	event: Event!
	name: String!
	user: User!
	type: String!
	startDate: Time!
	endDate: Time!
}


#Scalar
scalar Time